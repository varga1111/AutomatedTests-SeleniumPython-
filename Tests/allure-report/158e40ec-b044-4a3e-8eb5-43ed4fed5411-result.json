{"name": "test_hyper_link_owndev_exists[Chrome]", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message:", "trace": "self = <test_e_learning_units.Test_Nav_E_Learning object at 0x10dd8c2b0>\n\n    def test_hyper_link_owndev_exists(self):\n        self.browser = E_Learning(self.browser)\n>       self.browser.hyper_link_owndev_exists()\n\nUnit/test_e_learning_units.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../Pages/e_learning.py:40: in hyper_link_owndev_exists\n    return self.is_visible(Locators.btn_it_courses_dev)\n../Configs/basemethods.py:43: in is_visible\n    element = wait(self.browser, 10).until(EC.element_to_be_clickable(by_locator))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"9480f5c7fcc3d576959545ff57f85234\")>, method = <function element_to_be_clickable.<locals>._predicate at 0x10decfc10>, message = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except InvalidSelectorException as e:\n                raise e\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n../../../../../Library/Python/3.9/lib/python/site-packages/selenium/webdriver/support/wait.py:89: TimeoutException"}, "parameters": [{"name": "init_driver", "value": "'Chrome'"}], "start": 1668966126634, "stop": 1668966137562, "uuid": "12f90b6d-d27e-465a-83e8-f5cbd91111e3", "historyId": "ef3bfba8d9382cc20187faff6a28952b", "testCaseId": "341832423826efbc3e6895d25e4dc2c5", "fullName": "Unit.test_e_learning_units.Test_Nav_E_Learning#test_hyper_link_owndev_exists", "labels": [{"name": "tag", "value": "@pytest.mark.usefixtures('init_driver')"}, {"name": "parentSuite", "value": "Unit"}, {"name": "suite", "value": "test_e_learning_units"}, {"name": "subSuite", "value": "Test_Nav_E_Learning"}, {"name": "host", "value": "Opens-Air.home"}, {"name": "thread", "value": "8659-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Unit.test_e_learning_units"}]}