{"uid":"8aa7bb9ed05ced02","name":"test_btn_car_fy_exists[Chrome]","fullName":"Tests.Unit.test_mainpage_units.Test_MainPage_Units#test_btn_car_fy_exists","historyId":"2e1696589486d352622bb3b68b922296","time":{"start":1669009915719,"stop":1669009925805,"duration":10086},"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message:","statusTrace":"self = <test_mainpage_units.Test_MainPage_Units object at 0x10c2cb100>\n\n    def test_btn_car_fy_exists(self):\n        self.browser = Mainpage_It_Courses_Dropdown(self.browser)\n>       visible = self.browser.btn_car_fy_exists()\n\nTests/Unit/test_mainpage_units.py:357: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../MyStuff/Web/Training360/AutomatedTests/Pages/mainpage_it_courses_dropdown.py:180: in btn_car_fy_exists\n    return self.is_visible(Locators.btn_car_fy)\n../../../MyStuff/Web/Training360/AutomatedTests/Configs/basemethods.py:44: in is_visible\n    element = wait(self.browser, 10).until(EC.element_to_be_clickable(by_locator))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"a6e021dd52c956145b1572763717538e\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x10c42fb80>\nmessage = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n../../../MyStuff/Web/Training360/AutomatedTests/env/lib/python3.9/site-packages/selenium/webdriver/support/wait.py:95: TimeoutException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"init_driver","time":{"start":1669009596518,"stop":1669009597947,"duration":1429},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"afterStages":[{"name":"init_driver::0","time":{"start":1669010047876,"stop":1669010047949,"duration":73},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"tag","value":"@pytest.mark.usefixtures('init_driver')"},{"name":"parentSuite","value":"Tests.Unit"},{"name":"suite","value":"test_mainpage_units"},{"name":"subSuite","value":"Test_MainPage_Units"},{"name":"host","value":"Opens-Air.home"},{"name":"thread","value":"4685-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"Tests.Unit.test_mainpage_units"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"init_driver","value":"'Chrome'"}],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":["@pytest.mark.usefixtures('init_driver')"]},"source":"8aa7bb9ed05ced02.json","parameterValues":["'Chrome'"]}