{"name": "test_btn_comp_man_sfc_exists[Chrome]", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message:", "trace": "self = <test_mainpage_units.Test_MainPage_Units object at 0x10c2beb80>\n\n    def test_btn_comp_man_sfc_exists(self):\n        self.browser = Mainpage_It_Courses_Dropdown(self.browser)\n>       visible = self.browser.btn_comp_man_sfc_exists()\n\nTests/Unit/test_mainpage_units.py:344: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../../../MyStuff/Web/Training360/AutomatedTests/Pages/mainpage_it_courses_dropdown.py:170: in btn_comp_man_sfc_exists\n    return self.is_visible(Locators.btn_comp_man_sfc)\n../../../MyStuff/Web/Training360/AutomatedTests/Configs/basemethods.py:44: in is_visible\n    element = wait(self.browser, 10).until(EC.element_to_be_clickable(by_locator))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"a6e021dd52c956145b1572763717538e\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x10c42f430>\nmessage = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n../../../MyStuff/Web/Training360/AutomatedTests/env/lib/python3.9/site-packages/selenium/webdriver/support/wait.py:95: TimeoutException"}, "parameters": [{"name": "init_driver", "value": "'Chrome'"}], "start": 1669009905512, "stop": 1669009915605, "uuid": "d4ad353a-a1a4-42d6-b1ab-30772091bd00", "historyId": "1bea492dd49a84c42dbfd8f75074fb86", "testCaseId": "d41c68f9900930b02a68a6fee8c96e5d", "fullName": "Tests.Unit.test_mainpage_units.Test_MainPage_Units#test_btn_comp_man_sfc_exists", "labels": [{"name": "tag", "value": "@pytest.mark.usefixtures('init_driver')"}, {"name": "parentSuite", "value": "Tests.Unit"}, {"name": "suite", "value": "test_mainpage_units"}, {"name": "subSuite", "value": "Test_MainPage_Units"}, {"name": "host", "value": "Opens-Air.home"}, {"name": "thread", "value": "4685-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Tests.Unit.test_mainpage_units"}]}